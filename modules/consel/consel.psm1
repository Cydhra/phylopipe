using module ..\util

class Consel {
    static [string] wsl_makermt_path() {
        return [Util]::wsl_path([System.IO.Path]::Combine($PSScriptRoot, "bin", "makermt"))
    }

    static [string] wsl_consel_path() {
        return [Util]::wsl_path([System.IO.Path]::Combine($PSScriptRoot, "bin", "consel"))
    }

    static [string] wsl_catpv_path() {
        return [Util]::wsl_path([System.IO.Path]::Combine($PSScriptRoot, "bin", "catpv"))
    }

    # Make the RMT file that consel uses to assessing the tree confidence.
    # Parameters:
    #   $sitelh_file: The site likelihood file generated by RAxML
    #   $prefix: The prefix for the output files (will create $prefix.rmt and $prefix.vt)
    # Returns:
    #   The path to the RMT file (i.e., $prefix.rmt)
    static [string] make_rmt([string]$sitelh_file, [string]$prefix) {
        $wsl_sitelh_file = [Util]::wsl_path($sitelh_file)
        $wsl_prefix = [Util]::wsl_path($prefix)
        $wsl_makermt_path = [Consel]::wsl_makermt_path()
        wsl $wsl_makermt_path --puzzle $wsl_sitelh_file $wsl_prefix
        $rmt_file = "$prefix.rmt"
        return $rmt_file
    }

    # Run consel to assess the tree confidence.
    #
    # Parameters:
    #   $rmt_file: The RMT file generated by the make_rmt function
    #   $prefix: The prefix for the output files (will create $prefix.pv and $prefix.ci)
    # Returns:
    #   The path to the PV file (i.e., $prefix.pv)
    static [string] run_consel([string]$rmt_file, [string]$prefix) {
        $wsl_rmt_file = [Util]::wsl_path($rmt_file)
        $wsl_prefix = [Util]::wsl_path($prefix)
        $wsl_consel_path = [Consel]::wsl_consel_path()
        wsl $wsl_consel_path $wsl_rmt_file $wsl_prefix
        $pv_file = "$prefix.pv"
        return $pv_file
    }

    # Convert the PV file generated by consel to a TSV file.
    static [void] convert_pv_to_tsv([string]$pv_file, [string]$tsv_file)
    {
        $wsl_pv_file = [Util]::wsl_path($pv_file)
        $wsl_catpv_path = [Consel]::wsl_catpv_path()

        (wsl $wsl_catpv_path $wsl_pv_file) # TODO: parse the output which is space-aligned instead of tab-separated
    }
}